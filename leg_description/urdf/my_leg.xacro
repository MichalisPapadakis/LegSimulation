<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="RR">

<!-- Colors -->
<material name="blue">
  <color rgba="0 0 0.8 1"/>
</material>

<material name="red">
  <color rgba="0.8 0 0 1"/>
</material>

<material name="grey">
  <color rgba="0.5 0.5 0.5 1"/>
</material>

<material name="DarkGrey">
  <color rgba="0.3 0.3 0.3 1"/>
</material>

<!-- Defining macros -->
<xacro:property name="BaseHeight" value="0.5" />

<!-- Lengths -->
<xacro:property name="LB0" value="0.05555" />
<xacro:property name="L01" value="0.07763" />
<xacro:property name="L12" value="0.11208" />
<xacro:property name="L23" value="0.2531" />
<xacro:property name="L3E" value="0.248" />

<!-- Connectors -->
<xacro:property name="connectorL_1" value="0.004" />
<!-- Hip -->
<xacro:property name="hipW" value="0.045" />
<!-- leg -->
<xacro:property name="legD" value="0.041" />

<!-- Actuator -->
<xacro:property name="actuator_nudge" value="0.00666" />
<xacro:property name="actuator_cylinder_width" value="0.03084" />
<xacro:property name="actuator_total_width" value="0.05708" />
<xacro:property name="actuator_diameter" value="0.1031" />

<!-- Generated Quantities -->
<!-- AMOO = "actuator_midplane_origin_offset" -->
<xacro:property name="AMOO" value="${(actuator_total_width-actuator_cylinder_width)/2}" />
<xacro:property name="link1_total_length" value="${-hipW/2 + L12 + actuator_total_width-(actuator_cylinder_width/2+actuator_nudge)}" />
<xacro:property name="link1_total_mid_originL" value="${link1_total_length/2 - ( actuator_total_width - actuator_cylinder_width/2 - actuator_nudge) }" />




<!-- Actuator Limits -->
<xacro:property name="velocity_limit" value="398" />

<xacro:property name="maxCurrent" value="13.36" />
<xacro:property name="motorConstantKt" value="0.8" />
<xacro:property name="effort_limit" value="${maxCurrent*motorConstantKt}" />

<!-- Moment of inertia -->
<xacro:macro name="default_inertial" params="mass xl yl zl *Dorigin">
    <inertial>
            <mass value="${mass}" />
            <inertia ixx="${ mass * ( yl*yl + zl*zl ) / 12 }" ixy="0.0" ixz="0.0"
                     iyy="${ mass * ( xl*xl + zl*zl ) / 12 }" iyz="0.0"
                     izz="${ mass * ( yl*yl + xl*xl ) / 12 }" />
            <xacro:insert_block name="Dorigin" />
    </inertial>
</xacro:macro>


<!-- Addin objects: -->

<link name="world"/> 

<!-- Base Link  -->
<link name="base_link">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/Base.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="DarkGrey"/>
  </visual>
  <collision>
    <geometry>
      <cylinder radius="${actuator_diameter/2+connectorL_1}" length="${actuator_total_width}"/>
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 ${AMOO/2}"/>
  </collision>
  <inertial>
    <mass value="1.14058" />
    <inertia 
    ixx="0.000576572" 
    ixy="-1.091449e-05" 
    ixz="4.096e-06"
    iyy="0.000825053" 
    iyz="3.018e-06"
    izz="0.000391889" />
    <origin rpy="0 0 0" xyz="-0.00083 -0.00061 0.01032" />
  </inertial>
</link>

<joint name="world_joint" type="fixed">
  <parent link="world"/>
  <child link="base_link"/>
  <origin rpy="${pi/2} ${-pi/2} 0" xyz="${LB0} 0 ${BaseHeight}"/>
</joint>   

<!-- Link 1  -->
<link name="link1">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/link1.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="grey"/>
  </visual>
  <collision>
    <geometry>
      <cylinder radius="${actuator_diameter/2+connectorL_1}" length="${link1_total_length}"/>
    </geometry>
    <origin rpy="${pi/2} 0 0" xyz="0  ${-link1_total_mid_originL} 0"/>
  </collision>
  <inertial>
    <mass value="1.14058" />
    <inertia 
    ixx="0.000576572" 
    ixy="-1.091449e-05" 
    ixz="4.096e-06"
    iyy="0.000825053" 
    iyz="3.018e-06"
    izz="0.000391889" />
    <origin rpy="0 0 0" xyz="-0.00083 -0.00061 0.01032" />
  </inertial>
</link>

<joint name="base_to_link1" type="revolute"> 
  <parent link="base_link"/>
  <child link="link1"/>
  <axis rpy = "0 0 0" xyz="0 0 1"/>
  <limit lower="${-pi/2}" upper="${pi/2}" effort="${effort_limit}" velocity="${velocity_limit}" />
  <origin rpy = "0 0 0" xyz="0 0 ${-L01}"/>
</joint>  

<transmission name="base_link1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$motor1">
      <mechanicalReduction>7</mechanicalReduction>
    </actuator>
    <joint name="base_to_link1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
</transmission>

<!-- Link 2  -->
<link name="link2">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/link2.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="DarkGrey"/>
  </visual>
  <collision name="link2_leg">
    <geometry>
      <cylinder radius="${legD/2}" length="${L23}"/>
    </geometry>
    <origin rpy="0 ${pi/2} 0" xyz="${L23/2} 0 0"/>
  </collision>
  <!-- <collision name="link2_unit">
    <geometry>
      <cylinder radius="${actuator_diameter/2+connectorL_1}" length="${hipW+actuator3_wt_connectorL}"/>
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 ${-(actuator3_wt_connectorL/2)}"/>
  </collision> -->
  <inertial>
    <mass value="0.94987" />
    <inertia 
    ixx="0.001561735" 
    ixy="1.2537e-05" 
    ixz="0.000843757"
    iyy="0.005174717" 
    iyz="1.72e-05"
    izz="0.004776989" />
    <origin rpy="0 0 0" xyz="0.03158 -0.00042 -0.02813" />
  </inertial>
</link>

<joint name="link1_to_link2" type="continuous"> 
  <parent link="link1"/>
  <child link="link2"/>
  <axis rpy = "0 0 0" xyz="0 0 1"/>
  <origin rpy = "${pi/2} ${pi/2} 0" xyz="0 ${-L12}  0"/>
</joint> 

<transmission name="link1_link2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$motor2">
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
    <joint name="link1_to_link2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>


<!-- Gazebo -->
<gazebo> 
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/leg</robotNamespace>
    </plugin>
</gazebo>

</robot>