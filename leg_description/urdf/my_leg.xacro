<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="RR">

<!-- Colors -->
<material name="blue">
  <color rgba="0 0 0.8 1"/>
</material>

<material name="red">
  <color rgba="0.8 0 0 1"/>
</material>

<material name="grey">
  <color rgba="0.5 0.5 0.5 1"/>
</material>

<material name="DarkGrey">
  <color rgba="0.3 0.3 0.3 1"/>
</material>

<!-- Defining macros -->
<xacro:property name="BaseHeight" value="0.4" />

<!-- Lengths -->
<xacro:property name="LB0" value="0.05555" />
<xacro:property name="L01" value="0.07763" />
<xacro:property name="L12" value="0.11208" />
<xacro:property name="L23" value="0.2531" />
<xacro:property name="L3E" value="0.223" />

<!-- Connectors -->
<xacro:property name="connectorL_1" value="0.004" />
<!-- Hip -->
<xacro:property name="hipW" value="0.045" />
<xacro:property name="hipH" value="0.128" />
<xacro:property name="hipSide" value="0.07" />
<xacro:property name="hip_center_origin_L" value="0.028" />
<!-- Knee -->
<xacro:property name="knee_gearD" value="0.05" />

<!-- leg -->
<xacro:property name="legD" value="0.041" />

<!-- Link3 -->
<xacro:property name="link3_angle_limit" value="2.229" />
<xacro:property name="footD" value="0.045" />

<!-- Actuator -->
<xacro:property name="actuator_nudge" value="0.00666" />
<xacro:property name="actuator_cylinder_width" value="0.03084" />
<xacro:property name="actuator_total_width" value="0.05708" />
<xacro:property name="actuator_diameter" value="0.1031" />

<!-- Generated Quantities -->
<!-- AMOO = "actuator_midplane_origin_offset" -->
<xacro:property name="AMOO" value="${(actuator_total_width-actuator_cylinder_width)/2}" />
<xacro:property name="link1_total_length" value="${-hipW/2 + L12 + actuator_total_width-(actuator_cylinder_width/2+actuator_nudge)}" />
<xacro:property name="link1_total_mid_originL" value="${link1_total_length/2 - ( actuator_total_width - actuator_cylinder_width/2 - actuator_nudge) }" />

<!-- Actuator Limits -->
<xacro:property name="velocity_limit" value="388.4" />

<xacro:property name="maxCurrent" value="13.36" />
<xacro:property name="motorConstantKt" value="0.0754" />
<xacro:property name="effort_limit" value="${maxCurrent*motorConstantKt}" />

<!-- Gear Reductions -->
<xacro:property name="kr1" value="7" />
<xacro:property name="kr2" value="10" />
<xacro:property name="kr3" value="10" />

<!-- Addin objects: -->

<link name="world"/> 

<!-- Base Link  -->
<link name="base_link">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/Base.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="DarkGrey"/>
  </visual>
  <collision>
    <geometry>
      <cylinder radius="${actuator_diameter/2+connectorL_1}" length="${actuator_total_width}"/>
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 ${AMOO/2}"/>
  </collision>
  <inertial>
    <mass value="0.4759" />
    <inertia 
    ixx="0.000576572" 
    ixy="1.091449e-05" 
    ixz="-4.096e-06"
    iyy="0.000825053" 
    iyz="-3.018e-06"
    izz="0.000391889" />
    <origin rpy="0 0 0" xyz="-0.00083 -0.00061 0.01032" />
  </inertial>
</link>

<joint name="world_joint" type="fixed">
  <parent link="world"/>
  <child link="base_link"/>
  <origin rpy="${pi/2} ${-pi/2} 0" xyz="${LB0} 0 ${BaseHeight}"/>
</joint>   

<!-- Link 1  -->
<link name="link1">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/link1.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="grey"/>
  </visual>
  <collision>
    <geometry>
      <cylinder radius="${actuator_diameter/2+connectorL_1}" length="${link1_total_length}"/>
    </geometry>
    <origin rpy="${pi/2} 0 0" xyz="0  ${-link1_total_mid_originL} 0"/>
  </collision>
  <inertial>
    <mass value="0.4759" />
    <inertia 
    ixx="0.000576572" 
    ixy="1.091449e-05" 
    ixz="-4.096e-06"
    iyy="0.000825053" 
    iyz="-3.018e-06"
    izz="0.000391889" />
    <origin rpy="0 0 0" xyz="-0.00083 -0.00061 0.01032" />
  </inertial>
</link>

<joint name="base_to_link1" type="revolute"> 
  <parent link="base_link"/>
  <child link="link1"/>
  <axis rpy = "0 0 0" xyz="0 0 1"/>
  <limit lower="${-pi/2}" upper="${pi/2}" effort="${effort_limit*kr1}" velocity="${velocity_limit/kr1}" />
  <origin rpy = "0 0 0" xyz="0 0 ${-L01}"/>
</joint>  

<transmission name="base_link1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor1">
      <mechanicalReduction>${kr1}</mechanicalReduction>
    </actuator>
    <joint name="base_to_link1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
</transmission>

<!-- Link 2  -->
<link name="link2">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/link2.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="DarkGrey"/>
  </visual>
  <collision name="link2_leg">
    <geometry>
      <cylinder radius="${legD/2}" length="${L23}"/>
    </geometry>
    <origin rpy="0 ${pi/2} 0" xyz="${L23/2} 0 0"/>
  </collision>
  <collision name="link2_hip">
    <geometry>
      <box size="${hipH} ${hipSide} ${hipW}" />
    </geometry>
    <origin rpy="0 0 0" xyz="${hip_center_origin_L} 0 0"/>
  </collision>
  <inertial>
    <mass value="0.94987" />
    <inertia 
    ixx="0.001561735" 
    ixy="-1.2537e-05" 
    ixz="-0.000843757"
    iyy="0.005174717" 
    iyz="-1.72e-05"
    izz="0.004776989" />
    <origin rpy="0 0 0" xyz="0.03158 -0.00042 -0.02813" />
  </inertial>
</link>

<joint name="link1_to_link2" type="continuous"> 
  <parent link="link1"/>
  <child link="link2"/>
  <axis rpy = "0 0 0" xyz="0 0 1"/>
  <origin rpy = "${pi/2} ${pi/2} 0" xyz="0 ${-L12}  0"/>
  <limit effort="${effort_limit*kr2}" velocity="${velocity_limit/kr2}" />
</joint> 

<transmission name="link1_link2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor2">
      <mechanicalReduction>${kr2}</mechanicalReduction>
    </actuator>
    <joint name="link1_to_link2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
</transmission>
  
<!-- Link 3  -->
<link name="link3">
  <visual>
    <geometry>      
        <mesh scale=".001 .001 .001" filename="package://leg_description/meshes/link3.STL" />
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <material name="grey"/>
  </visual>
  <collision name="link3_leg">
    <geometry>
      <cylinder radius="${legD/2}" length="${L3E- (footD/2) }"/>
    </geometry>
    <origin rpy="0 ${pi/2} 0" xyz="${L3E/2  } 0 0"/>
  </collision>
  <collision name="link3_knee">
    <geometry>
      <cylinder radius="${knee_gearD/2}" length="${legD }"/>    
    </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </collision>
  <collision name="link3_foot">
    <geometry>
      <sphere radius="${footD/2}"/>
    </geometry>
    <origin rpy="0 0 0" xyz="${ L3E } 0 0"/>
  </collision>
  <inertial>
    <mass value="0.36814" />
    <inertia 
    ixx="8.8159e-05" 
    ixy="0" 
    ixz="0"
    iyy="0.003793802" 
    iyz="0"
    izz="0.003804351" />
    <origin rpy="0 0 0" xyz="0.10653 0 0" />
  </inertial>
</link>

<joint name="link2_to_link3" type="revolute"> 
  <parent link="link2"/>
  <child link="link3"/>
  <axis rpy = "0 0 0" xyz="0 0 1"/>
  <origin rpy = "0 0 0" xyz="${L23} 0  0"/>
  <limit lower="${-link3_angle_limit}" upper="${link3_angle_limit}" effort="${effort_limit*kr3}" velocity="${velocity_limit/kr3}" />
</joint> 

<transmission name="link2_link3_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="motor3">
      <mechanicalReduction>${kr3}</mechanicalReduction>
    </actuator>
    <joint name="link2_to_link3">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
</transmission>

<!-- Gazebo references -->
<gazebo reference="base_link" >
  <material> Gazebo/Blue </material>
  <kinematic> true </kinematic>
</gazebo>

<gazebo reference="link1" >
  <material> Gazebo/Grey  </material>
</gazebo>

<gazebo reference="link2" >
  <material> Gazebo/Grey  </material>
</gazebo>

<gazebo reference="link3" >
  <material> Gazebo/Orange </material>
  <collision>
    <surface>
      <friction>
      <torsional>
        <coefficient> 0 </coefficient>
      </torsional>
        <ode>
          <mu>0.7</mu>
          <!-- <mu2>1e-3</mu2> -->
        </ode>
      </friction>
      <contact>
        <ode>
            <kp>1e4</kp>
            <kd>1e2</kd>
            <max_vel>100</max_vel>
        </ode>
      </contact>
    </surface>  
  </collision>
  <sensor type="contact" name="wall_contact_sensor">
        <update_rate>1000.0</update_rate>
        <always_on>1</always_on>
        <contact>
          <collision>link3_foot_collision_2</collision>
          <topic>/link3_foot_collision</topic>
        </contact>
        <plugin name="gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>1000.0</updateRate>
          <bumperTopicName>/end_effector_collision</bumperTopicName>
          <frameName>world</frameName>
        </plugin>
      </sensor>

</gazebo>

<gazebo>
<physics type="ode" >
  <ode>
      <solver>
      <type>world</type>
        <!-- <friction_model>cone_model</friction_model> -->

        <!-- Only Important in quick solver -->
        <!-- <iters>100</iters>  -->
        <!-- <sor>1 </sor> -->
      </solver>
  </ode>
  <max_step_size>0.001</max_step_size>
</physics>
</gazebo>

<!-- Gazebo -->
<gazebo> 
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/leg</robotNamespace>
    </plugin>
</gazebo>

</robot>